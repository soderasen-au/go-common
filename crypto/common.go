package crypto

import (
	"crypto/rsa"
	"crypto/x509"
	"encoding/pem"
)

const (
	PRIVATE_KEY string = `-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`
	PUBLIC_KEY string = `-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA6O52yzq/UaT31zuH72c8
M7SdP6zu1iwWaTsVbXFUse18Ird+t+ObQa2+MvJfieKOzNrlh3G955aVHJghHDGs
K7cC/kIIt1/r2YowGa1U02wk55ByManP4avsGepf3hjyDXnRmgqxDABn+SsvGJed
debuzIGvmfupX1cMTK9VEU23kAHGrMkWp19lxWGsTR/tX73SQR7mSQvdzlPq0PsQ
KI8sD2CDcp4yMEoGHGl+LaWr8R3CBQ9l1D+9bjqjpmWfyNfV7qKKw9TALyOAyBNm
VJMWDJTvyosYtlMgLOgKp2635es/zcGgGN1nXhYg6BC7EGhCImU12bunr3nm8Wyx
Q2aFLF3gR9xnZQhQ1GukLH+iL0c69huGHQOOV684n/DYTjCJ7li1McYyiJ1dBNRy
X7tFC1gdfK/LEq9EoGbgC7lhjOiYXzdkGmhj/fEixkHmtwvj8rZwv541LXIc1uB8
ZTHbQYfgFWGXb1daZH9AFa0qP7KxTglzagUGsfivdfDDcpaHR9cR5vVUq1T9wJqn
Vzv/g0EEKPU434aU6HqhiZaaAJ2hS/XxOkShZWVh6o2UPH4C3uCprGxYAi+d7XM8
VmoipQhStl8iC5bcGeNdgP096dY27kzRO2yzFWPiT48mtn9joyEHDZnN3z9HMJe7
DdO3SP/mzGahRV5i6lI0+qUCAwEAAQ==
-----END PUBLIC KEY-----
`
)

var (
	InternalPrivateKey *rsa.PrivateKey
	InternalKeyPair    *KeyPair
)

func init() {
	InternalKeyPair = &KeyPair{
		PrivateKey: PRIVATE_KEY,
		PublicKey:  PUBLIC_KEY,
	}

	pem, _ := pem.Decode([]byte(PRIVATE_KEY))
	if pem == nil {
		panic("error private key")
	}
	privateKey, err := x509.ParsePKCS1PrivateKey(pem.Bytes)
	if err != nil {
		panic(err)
	}
	InternalPrivateKey = privateKey
}
